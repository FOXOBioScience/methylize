name: Run PyTest
on:
  push:
    branches:
      - master
      - 'feature/**'
  pull_request:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  COVERALLS_SERVICE_NAME: 'github'
  COVERALLS_REPO_TOKEN : ${{ secrets.COVERALLS_REPO_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'

      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
            pip install pipenv pytest_cov
            pipenv install pytest_cov
            pipenv install --dev --skip-lock
            pipenv install -e . --skip-lock
            pipenv install coveralls --skip-lock
            # pipenv uses requirements.txt

      - name: coveralls_first_attempt
        run: |
          pipenv run pytest tests --cov-report= --cov=methylize tests/
          # term-missing && coveralls /tests

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.26
        if: always()
        with:
          files: test-results/**/*.xml

      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@master
        with:
          # The `GITHUB_TOKEN` or `COVERALLS_REPO_TOKEN`.
          # Default: ${{ github.token }}
          #github-token: ${{ secrets.GITHUB_TOKEN }}
          github-token: ${{ github.token }}
          # Set to `true` if you are using parallel jobs, then use `parallel-finished: true` for the last action.
          # Default: false
          parallel: 'false'
          # Set to `true` for the last action when using `parallel: true`.
          # Default: false
          parallel-finished: false
          # A name to identify the current job. This is useful in combination with `parallel: true`.
          # Default: null
          flag-name: null
          # A sub-directory in which coverage was executed.
          # Default: '.'
          base-path: '.'
          # Set to true to increase logger verbosity.
          # Default: false
          debug: 'true'


# Diffs are limited to 300 files. If there are files changed that aren't matched in the first 300 files returned by the
# filter, the workflow will not run. You may need to create more specific filters so that the workflow will run automatically.
#       - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
# - generated xml file: /home/runner/work/methylize/methylize/htmlcov/junit.xml --
#    - name: Coveralls
#      # add secrets here: https://github.com/organizations/FoxoTech/settings/secrets/actions
#      env:
#        COVERALLS_SERVICE_NAME: 'GitHub CI'
#        COVERALLS_REPO_TOKEN : ${{ secrets.COVERALLS_REPO_TOKEN }}
#      uses: AndreMiras/coveralls-python-action@develop
#      with:
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        parallel: true
#        flag-name: Unit Test
